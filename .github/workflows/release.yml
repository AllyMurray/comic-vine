name: release
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      CI: 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build packages
        run: npx turbo build
      - name: Version packages and publish
        run: |
          # Apply version changes
          npx changeset version
          # Commit version changes
          git add .
          git commit -m "chore: version packages" || echo "No changes to commit"
          # Publish packages
          pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Push version changes
        run: |
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub Release
        run: |
          # Create GitHub releases for published packages
          # Get the version from package.json
          PACKAGE_VERSION=$(node -p "require('./packages/client/package.json').version")
          PACKAGE_NAME=$(node -p "require('./packages/client/package.json').name")
          echo "Creating GitHub release for $PACKAGE_NAME@$PACKAGE_VERSION"
          gh release create "v$PACKAGE_VERSION" --generate-notes || echo "Release may already exist"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
